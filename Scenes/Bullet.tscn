[gd_scene load_steps=4 format=2]

[ext_resource path="res://Sprites/bullet.png" type="Texture" id=1]

[sub_resource type="GDScript" id=2]
script/source = "extends Area2D

var speed = null setget speed_setter
var direction = null setget direction_setter
var damage = null setget damage_setter
var velocity = Vector2(0,0)


func speed_setter(_speed):
	if (_speed == null):
		speed = 100
		return
	speed = _speed
	pass

func direction_setter(_direction):
	if (_direction == null):
		direction = Vector2(1,0)
		return
	direction = _direction
	pass

func damage_setter(_damage):
	if (_damage == null):
		damage = 0
		return
	damage = _damage
	pass

func initialize(_position,_direction,_rot,_speed, _damage):
	if(_position == null):
		position = Vector2(0,0)
	else:
		position = _position
	
	if(_rot == null):
		rotation_degrees = 180
	else:
		rotation_degrees = _rot
	
	direction_setter(_direction)
	speed_setter(_speed)
	damage_setter(_damage)
	pass
	
func _ready():
	add_to_group(\"enemy\")
	pass
	
func _physics_process(delta):
	if(position.y > get_viewport().get_visible_rect().size.y + 25):
		queue_free()
	velocity.y = speed * delta * direction.y
	velocity.x = speed * delta * direction.x
	translate(velocity)
	pass

func _on_Bullet_body_entered(body):
	if body is KinematicBody2D or body is Area2D:
		if body.is_in_group(\"enemy\") == true:
			body.get_node(\"HealthBarEnemy\").health_damaged(damage)
			queue_free()
		elif body.is_in_group(\"player\") == true:
			#body.set_health(0) #not work
			queue_free()
	pass # Replace with function body.
"

[sub_resource type="CapsuleShape2D" id=1]
radius = 8.82857
height = 25.4557

[node name="Bullet" type="Area2D"]
position = Vector2( 235.229, 264.633 )
scale = Vector2( 0.5, 0.5 )
script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0.339371, 1.80997 )
shape = SubResource( 1 )
[connection signal="body_entered" from="." to="." method="_on_Bullet_body_entered"]
